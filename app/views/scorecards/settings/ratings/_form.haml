.border-right.border-left.border-bottom.bg-white
  .card-body.view-center
    = simple_form_for current_program, url: scorecards_settings_ratings_path, method: 'post' do |f|
      .d-flex.mb-2
        %strong.w-25= t('rating_scale.rating_code')
        .w-75
          .d-flex
            %strong.w-25= t('rating_scale.language')
            %div
              %strong
                = t('indicator.audio')
                %abbr{title: 'required'} *
              %span= t("indicator.audio_format_and_size_hint")

      - RatingScale.defaults.each do |hash_obj|
        - rating_scale = current_program.rating_scales.select{ |a| a.code==hash_obj[:code] }.first || RatingScale.new(hash_obj)

        = f.fields_for :rating_scales, rating_scale do |ff|
          = ff.hidden_field :id, value: rating_scale.id
          = ff.hidden_field :code, value: rating_scale.code
          = ff.hidden_field :value, value: rating_scale.value
          = ff.hidden_field :name, value: rating_scale.name

          .d-flex.mb-2
            .w-25= ff.object.code
            .w-75
              - current_program.languages.each do |lang|
                .d-flex
                  %div.w-25= lang.name
                  %div.mb-2.audio-wrapper
                    - obj = rating_scale.language_rating_scales.select{ |a| a.language_id==lang.id }.first || ff.object.language_rating_scales.new

                    = ff.fields_for :language_rating_scales, obj do |builder|
                      = builder.hidden_field :id, value: obj.id
                      = builder.hidden_field :language_id, value: lang.id
                      = builder.hidden_field :language_code, value: lang.code

                      - audio = obj.audio
                      - error_audio = obj.errors[:audio]

                      %div{class: ('form-group-invalid' if error_audio.present?)}
                        .form-control.file-control-wrapper{ class: [('d-none' if error_audio.blank? && audio.present?), ('is-invalid' if error_audio.present?)] }
                          = builder.file_field :audio, class: 'audio-input', accept: ".mp3,audio/*"

                        .invalid-feedback= error_audio.join('; ')

                      - if error_audio.blank? && audio.present?
                        .remove-audio-wrapper
                          .d-flex.align-items-center
                            = builder.hidden_field :remove_audio, class: 'audio-input-destroy'
                            %a.remove-audio.text-danger.mr-2.pointer
                              %i.far.fa-trash-alt

                            = link_to download_path(file: audio.path), target: "_blank", class: 'btn btn-link p-0 d-block text-truncate' do
                              = builder.object.audio_identifier

      .actions
        = f.submit t('shared.save'), class: 'btn btn-primary'
